<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.archiviststoolkit.model">
	<class name="org.archiviststoolkit.model.DigitalObjects"
		   table="DigitalObjects">

		<id name="digitalObjectId" column="digitalObjectId" type="java.lang.Long">
			<generator class="native"></generator>
		</id>

		<version name="version" type="java.lang.Long" column="version"/>

		<property name="auditInfo" type="org.archiviststoolkit.hibernate.AuditInfoType">
			<column name="lastUpdated"/>
			<column name="created"/>
			<column name="lastUpdatedBy"/>
			<column name="createdBy"/>
		</property>

		<!-- start common archDescription fields -->
		<property name="title"
				  column="title"
				  type="text"/>

		<property name="dateExpression"
				  column="dateExpression"
				  type="string"
				  length="255"/>

		<property name="dateBegin"
				  column="dateBegin"
				  type="integer"/>

		<property name="dateEnd"
				  column="dateEnd"
				  type="integer"/>

		<property name="languageCode"
				  column="languageCode"
				  type="string"/>

		<property name="restrictionsApply"
				  column="restrictionsApply"
				  type="boolean"/>

		<set name="names"
			 cascade="all-delete-orphan"
			 inverse="true"
			 lazy="true"
			 access="field">
			<key>
				<column name="digitalObjectId"/>
			</key>
			<one-to-many class="ArchDescriptionNames"/>
		</set>

		<set name="subjects"
			 cascade="all-delete-orphan"
			 inverse="true"
			 lazy="true"
			 access="field">
			<key>
				<column name="digitalObjectId"/>
			</key>
			<one-to-many class="ArchDescriptionSubjects"/>
		</set>

		<set name="repeatingData"
			 cascade="all-delete-orphan"
			 inverse="true"
			 lazy="true"
			 order-by="sequenceNumber asc"
			 access="field">
			<key>
				<column name="digitalObjectId"/>
			</key>
			<one-to-many class="ArchDescriptionRepeatingData"/>
		</set>

		<!-- end common archDescription fields -->

		<property name="eadDaoActuate"
				  column="eadDaoActuate"
				  type="string"/>

		<property name="eadDaoShow"
				  column="eadDaoShow"
				  type="string"/>

		<property name="metsIdentifier"
				  column="metsIdentifier"
				  type="string"/>

		<property name="objectType"
				  column="objectType"
				  type="string"/>

		<property name="label"
				  column="label"
				  type="string"/>

		<property name="objectOrder"
				  column="objectOrder"
				  type="int"/>

        <property name="componentId"
				  column="componentId"
				  type="string"/>

		<!--<property name="accessRestrictions"-->
				  <!--column="accessRestrictions"-->
				  <!--type="text"/>-->

		<set name="fileVersions"
			 cascade="all-delete-orphan"
			 inverse="true"
			 lazy="false"
			 access="field">
			<key>
				<column name="digitalObjectId"/>
			</key>
			<one-to-many class="FileVersions"/>
		</set>

		<set name="digitalObjectChildren"
			 cascade="all"
			 inverse="true"
			 lazy="true"
			 order-by="objectOrder asc"
			 access="field">
			<key>
				<column name="parentDigitalObjectId" not-null="false"/>
			</key>
			<one-to-many class="DigitalObjects"/>
		</set>

        <set name="archDescriptionDates"
              cascade="all-delete-orphan"
              inverse="true"
              lazy="true"
              access="field">
             <key>
                 <column name="digitalObjectId" not-null="true"/>
             </key>
             <one-to-many class="org.archiviststoolkit.model.ArchDescriptionDates"/>
         </set>

		<many-to-one name="parent"
					 column="parentDigitalObjectId"/>
					 <!--access="field"-->
					 <!--outer-join="false"/>-->

		<many-to-one name="digitalInstance"
					 class="ArchDescriptionDigitalInstances"
					 column="archDescriptionInstancesId"
					 access="field"
                     cascade="all"/>

        <!-- Map to a Repository Link -->
        <many-to-one name="repository"
					 class="org.archiviststoolkit.model.Repositories"
					 column="repositoryId"
					 access="field"
					 fetch="join"
					 not-null="true"
					 outer-join="true"/>
        <filter name="repository" condition=":repositoryId = repositoryId"/>
	</class>
    <filter-def name="repository">
		<filter-param name="repositoryId" type="java.lang.Long"/>
	</filter-def>
</hibernate-mapping>
